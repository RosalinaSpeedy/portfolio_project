<!doctype html>
<html>

<head>
  <title>Search <%=siteData.siteName%>
  </title>
  <link rel="stylesheet" type="text/css" href="/main.css" />
</head>

<body>
  <h1>Search <%=siteData.siteName%>
  </h1>
  <form action="search_result" method="GET">
    <p>Event name:</p>
    <input id="search_box" type="text" name="search_text" value="">
    <h1>Filters:</h1>
    <p>date:<input type="date" id="date" name="date" value=""></p>
    <p><input type="text" id="location" name="location" placeholder="Enter event address" value=""></p>
    <p>distance:<select id="distance" name="distance">
        <option value="5">5 miles</option>
        <option value="10">10 miles</option>
        <option value="25">25 miles</option>
        <option value="50">50 miles</option>
        <option value="na">N/A</option>
      </select></p>
    <p>
      <input type="range" id="ticketCost" name="ticketCost" min="0" max="500" step="10" value="250"
        oninput="updateCostValue(this.value)">
    <p id="ticketCostValue">TIcket cost up to: £250</p>
    </p>
    <input type="submit" value="Search">
  </form>
</body>
<script>
  function updateCostValue(val) {
    document.getElementById('ticketCostValue').innerText = 'Ticket cost up to: £' + val;
  }
  function updateListData() {
    //$('#filterForm').submit(function(e) {
    //    e.preventDefault(); // Prevent default form submission
    $.ajax({
      // Send the form data to the server
      type: "POST",
      // url: $(this).attr('action'),
      url: './search_result',
      // data: $(this).serialize(), // Serialize form data for submission
      data: $('#filterForm').serialize(),
      success: function (response) {
        // Update the bookings list with the response
        $('.data-list').html($(response).find('.data-list').html());
        // remove the new data animation if it has already been added
        $('.data-list').removeClass('newDataLoadedEffect');
        // force the animation to run again
        void $('.data-list')[0].offsetWidth;
        // re-add the animation on the new data
        $('.data-list').addClass('newDataLoadedEffect');
      }
    });
  }

  function getLocation() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(showPosition);
    } else {
      alert("Geolocation is not supported by this browser.");
    }
  }

  function showPosition(position) {
    alert("Latitude: " + position.coords.latitude +
    " Longitude: " + position.coords.longitude);
  }

  getLocation();
  showPosition();
</script>

</html>